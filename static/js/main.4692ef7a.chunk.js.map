{"version":3,"sources":["components/Form/Form.module.scss","components/ContactsList/ContactsList.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Alert/Alert.module.scss","components/Error/Error.module.scss","components/Loader/Spinner.module.scss","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Alert/Alert.js","components/Form/Form.js","components/Error/Error.js","components/Loader/Spinner.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contact_filter","axios","defaults","baseURL","operations","addContact","name","number","dispatch","contact","post","then","data","catch","error","deleteContact","id","delete","fetchContacts","get","getFilter","state","phonebook","filter","getContacts","contacts","getLoading","loading","getError","getFilteredContacts","createSelector","normalizeFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebookReducer","devTools","process","Alert","className","styles","alert","Form","getContactValue","e","currentTarget","value","setState","findContactName","contactName","props","find","handleSubmit","preventDefault","resetInput","setTimeout","this","onSubmit","form","CSSTransition","in","appear","timeout","classNames","unmountOnExit","label","inputs","type","autoComplete","pattern","title","required","onChange","button","React","Component","connect","phonebookOperations","Error","Spinner","spinner","color","height","width","ContactsList","nodeRef","createRef","isLoading","isError","TransitionGroup","component","list","map","item","item_name","item_number","onClick","target","input","App","useRef","container","ref","contacts_container","contact_title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4692ef7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__kFqpC\",\"label\":\"Form_label__nolQm\",\"inputs\":\"Form_inputs__l3fdI\",\"button\":\"Form_button__xJKOB\",\"enter\":\"Form_enter__Ea4el\",\"enterActive\":\"Form_enterActive__tGV57\",\"exit\":\"Form_exit__2Oy_Y\",\"exitActive\":\"Form_exitActive__3u1BC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__111tj\",\"item\":\"ContactsList_item__1BNWk\",\"item_name\":\"ContactsList_item_name__rQDqU\",\"item_number\":\"ContactsList_item_number__121T3\",\"button\":\"ContactsList_button__3gXmO\",\"enter\":\"ContactsList_enter__piYuq\",\"enterActive\":\"ContactsList_enterActive__1xOyl\",\"exit\":\"ContactsList_exit__38MRK\",\"exitActive\":\"ContactsList_exitActive__1GS_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1ENNp\",\"contacts_container\":\"App_contacts_container__C82Do\",\"contact_title\":\"App_contact_title__3E-Gx\",\"title\":\"App_title__1gwcb\",\"appear\":\"App_appear__37j0E\",\"appearActive\":\"App_appearActive__1pBKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2w9pt\",\"input\":\"Filter_input__sjTos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2ep3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__Lrnl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__2V4yK\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const contact_filter = createAction('phonebook/contact_filter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst operations = {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\nexport default operations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getLoading = state => state.phonebook.loading;\r\nexport const getError = state => state.phonebook.error;\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  },\r\n);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  contact_filter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contact_filter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { phonebookReducer } from './phonebook';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import styles from './Alert.module.scss';\r\nconst Alert = () => {\r\n  return <div className={styles.alert}>Contact already exists</div>;\r\n};\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { phonebookOperations, getContacts } from '../../redux/phonebook';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Alert from '../Alert';\r\n\r\nimport styles from './Form.module.scss';\r\n\r\nclass Form extends React.Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    alert: false,\r\n  };\r\n  getContactValue = e => {\r\n    const { value, name } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  findContactName = contactName => {\r\n    const { contacts } = this.props;\r\n    return contacts.find(({ name }) => name === contactName);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    if (this.findContactName(name)) {\r\n      this.resetInput();\r\n      this.setState({ alert: true });\r\n      setTimeout(() => this.setState({ alert: false }), 2000);\r\n\r\n      return;\r\n    }\r\n    this.props.addContact(name, number);\r\n    this.resetInput();\r\n  };\r\n  resetInput = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number, alert } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <CSSTransition\r\n          in={alert}\r\n          appear\r\n          timeout={500}\r\n          classNames={styles}\r\n          unmountOnExit\r\n        >\r\n          <Alert />\r\n        </CSSTransition>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.inputs}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            autoComplete=\"off\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.getContactValue}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.inputs}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            autoComplete=\"off\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.getContactValue}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, number) =>\r\n    dispatch(phonebookOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport { error } from './Error.module.scss';\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <div className={error}>\r\n      <h1>It seems like something is broken, we will fix it soon</h1>\r\n    </div>\r\n  );\r\n};\r\n","import Loader from 'react-loader-spinner';\r\nimport { spinner } from './Spinner.module.scss';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Loader\r\n      className={spinner}\r\n      type=\"Bars\"\r\n      color=\"#00BFFF\"\r\n      height={50}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport {\r\n  phonebookOperations,\r\n  getFilteredContacts,\r\n  getLoading,\r\n  getError,\r\n} from '../../redux/phonebook';\r\nimport { Error } from '../Error';\r\nimport { Spinner } from '../Loader';\r\n\r\nimport styles from './ContactsList.module.scss';\r\n\r\nclass ContactsList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const nodeRef = React.createRef(null);\r\n    const { contacts, deleteContact, isLoading, isError } = this.props;\r\n    return (\r\n      <>\r\n        {isLoading && <Spinner />}\r\n        {isError && <Error />}\r\n        <TransitionGroup component=\"ul\" className={styles.list}>\r\n          {contacts.map(({ name, id, number }) => (\r\n            <CSSTransition\r\n              nodeRef={nodeRef}\r\n              key={id}\r\n              timeout={250}\r\n              classNames={styles}\r\n            >\r\n              <li key={id} className={styles.item}>\r\n                <span className={styles.item_name}>{name}</span>\r\n                <span className={styles.item_number}>{number}</span>\r\n\r\n                <button\r\n                  className={styles.button}\r\n                  type=\"button\"\r\n                  onClick={() => deleteContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getFilteredContacts(state),\r\n    isLoading: getLoading(state),\r\n    isError: getError(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contact_filter, getFilter } from '../../redux/phonebook';\r\n\r\nimport styles from './Filter.module.scss';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        value={filter}\r\n        autoComplete=\"off\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contact_filter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nconst App = () => {\r\n  const nodeRef = React.useRef(null);\r\n  return (\r\n    <section className={styles.container}>\r\n      <CSSTransition\r\n        nodeRef={nodeRef}\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames={{ ...styles }}\r\n        unmountOnExit\r\n      >\r\n        <h1 ref={nodeRef} className={styles.title}>\r\n          Phonebook\r\n        </h1>\r\n      </CSSTransition>\r\n\r\n      <Form></Form>\r\n      <div className={styles.contacts_container}>\r\n        <h2 className={styles.contact_title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactsList />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport 'modern-normalize';\r\nimport './styles.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}